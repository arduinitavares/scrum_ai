services:
  db:
    image: postgres:13
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile.dev
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ../:/app
    depends_on:
      db:
        condition: service_healthy
    environment:
      - PYTHONPATH=/app
    command: ["bash", "-c", "tail -f /dev/null"]  # Keep the container running

  # pgAdmin service (PostgreSQL admin interface)
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com  # Replace with your email
      PGADMIN_DEFAULT_PASSWORD: admin  # Replace with a secure password
    ports:
      - "5050:80"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: always

  # Adminer service (multi-database admin interface)
  adminer:
    image: adminer
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    restart: always

volumes:
  postgres_data:
  pgadmin_data:
